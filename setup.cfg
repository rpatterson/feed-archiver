[metadata]
# https://setuptools.pypa.io/en/latest/userguide/declarative_config.html#metadata
name = feed-archiver
version = attr: src.feedarchiver.version
description = Archive the full contents of RSS/Atom syndication feeds including enclosures and assets.
url = https://gitlab.com/rpatterson/feed-archiver
long_description = file: README.rst
long_description_content_type = text/x-rst
author = Ross Patterson
author_email = me@rpatterson.net
license = MIT
classifiers =
    Development Status :: 4 - Beta
    Environment :: Console
    Intended Audience :: Developers
    Intended Audience :: System Administrators
    License :: OSI Approved :: MIT License
    Natural Language :: English
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Topic :: Utilities

[options]
# https://setuptools.pypa.io/en/latest/userguide/declarative_config.html#using-a-src-layout
package_dir =
    =src
packages=find:
# https://docs.python.org/3/library/functools.html#functools.cached_property
python_requires = >=3.10
install_requires =
# Configuration file format
    pyyaml
# Faster, richer XML interface
    lxml
# Simple, easier HTTP client
    requests
# Stream large media downloads to files
    requests-toolbelt
# Avoid bot detection, real-world `User-Agent` HTTP header values
    user-agent
# Servarr API clients/wrappers
    arrapi
# Retry on connection errors
    tenacity

[options.packages.find]
where = src

[options.entry_points]
console_scripts =
    feed-archiver = feedarchiver:main
feedarchiver.linkpaths =
    default = feedarchiver.linkpaths.template:TemplateLinkPathPlugin
    template = feedarchiver.linkpaths.template:TemplateLinkPathPlugin
    sonarr = feedarchiver.linkpaths.servarr:SonarrLinkPathPlugin

[options.extras_require]
# Development tools not strictly needed by the test suite but that need this
# package/dist and its dependencies to be to be on the same `sys.path`, IOW to be
# importable.
devel =
# Libraries used in the actual code of the test suite
    requests-mock
# Development tools not strictly needed by the test suite
    pytest
    pytest-subtests
    pre-commit
    coverage
    tox
# Code style and linting tools
    pylint
    flake8
    mypy
    rstcheck
# Code formatting tools
    flake8-black
    autoflake
    autopep8
# MyPy type definitions
    lxml-stubs
    types-requests
    types-PyYAML
# Build tools that don't need this package to be importable but do need to be installed
# inside the container.
# Get the Python dist/package version from VCS `v#.#.#` tags dynamically.
    setuptools_scm
# Generate release notes/changelogs
    towncrier
# Build installable distributions, AKA packages
    build

[tool:pytest]
testpaths = src/feedarchiver

[coverage:run]
command_line = -m pytest --junit-xml=pytest-junit.xml -s
branch = True
source = src
[coverage:report]
fail_under = 100
show_missing = True

[flake8]
exclude = src/*/version.py
# Match Black's defaults
# https://black.readthedocs.io/en/stable/guides/using_black_with_other_tools.html#flake8
max-line-length = 88
extend-ignore = E203
aggressive = 3
experimental = true
